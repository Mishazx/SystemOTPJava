plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.mishazx'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // Добавляем репозиторий jitpack.io для JSMPP
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    
    // Поддержка внешней конфигурации и процессинга свойств
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Библиотека для загрузки переменных окружения из .env файла
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    
    // SMPP протокол для отправки SMS - временно отключен
    // implementation 'org.jsmpp:jsmpp:2.3.11' 
    
    // Старые зависимости Cloudhopper (закомментированы)
    // implementation 'com.cloudhopper:ch-smpp:5.0.9'
    // implementation 'com.cloudhopper:ch-commons-util:6.0.4'
    // implementation 'com.cloudhopper:ch-commons-charset:3.0.2'
    
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
